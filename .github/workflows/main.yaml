name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  lint:
    name: run lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-repo
      - run: pnpm run lint
  typecheck:
    name: run type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-repo
      - run: npx turbo run typecheck --filter=vite-multiple-assets
  format:
    name: run format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-repo
      - run: pnpm run format
  build:
    name: run build lib
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-repo
      - run: npx turbo run build --filter=vite-multiple-assets
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: packages/libs/dist
  test:
    timeout-minutes: 60
    needs: [ build ]
    name: run e2e test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-repo
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - uses: actions/download-artifact@v4
        with:
          path: packages/libs/dist
          name: dist

      #      - name: Build lib vite multiple assets
      #        run: npx turbo run build --filter=vite-multiple-assets

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run Test load multiple assets by React App
        run: npx turbo run e2e --filter=react

      - name: Run Test load multiple assets by Astro App
        run: npx turbo run e2e --filter=astro

      - name: Run Test load multiple assets by Vue3 App
        run: npx turbo run e2e --filter=vue3
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
